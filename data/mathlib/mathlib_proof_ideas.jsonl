{"statement_idx": 0, "proof_idea": "To prove injectivity, we assume `C(x) = C(y)` for two elements `x, y` in `R` and aim to show `x = y`. The equality of complex numbers `C(x) = C(y)` implies their real parts are equal. Since the real part of `C(r)` is `r` by definition, this directly yields the desired conclusion `x = y`."}
{"statement_idx": 1, "proof_idea": "For the forward direction, we can map any two elements of `R` to constant power series, which must be equal by the subsingleton hypothesis on `R\u27e6X\u27e7`, implying the elements themselves are equal. For the reverse direction, if `R` is a subsingleton, then any two power series are equal by extensionality, as all their corresponding coefficients in `R` must be equal."}
{"statement_idx": 2, "proof_idea": "To prove surjectivity, for any element `r` in the ring `R`, we must find a polynomial whose constant coefficient is `r`. The constant polynomial `C r` is the required polynomial, as its constant coefficient is `r` by definition."}
{"statement_idx": 3, "proof_idea": "To prove the ring of formal power series `A\u27e6X\u27e7` is not a field, we show that the indeterminate `X` is a non-zero element that lacks a multiplicative inverse. The constant term of the product of `X` with any power series is `0`, which means the product can never equal the multiplicative identity `1`, whose constant term is `1`."}
{"statement_idx": 4, "proof_idea": "First, show that `X` is not a unit because its constant term is 0. Then, for the main part of the proof, assume `X` factors as `f * g`, and by considering the constant terms, deduce that one of the factors must have a constant term of 0, which then implies the other factor must be a unit."}
{"statement_idx": 5, "proof_idea": "To prove the equality, we use the extensionality of power series by showing their coefficients are equal for any index `k`. Let `n` be the order of `f`; the `k`-th coefficient of the left-hand side is computed using the Cauchy product of `X^n` and `divided_by_X_pow_order hf`. This sum simplifies to the `k`-th coefficient of `f` because the only non-zero coefficient of `X^n` is at index `n`."}
{"statement_idx": 6, "proof_idea": "If `f` is a unit, there exists an inverse power series `g` such that `f * g = 1`. By examining the constant term of this equation, we see that the product of the constant terms of `f` and `g` must be 1. This implies the constant term of `f` is a unit and therefore non-zero, which by definition means the order of `f` is 0."}
{"statement_idx": 7, "proof_idea": "The proof proceeds by first establishing that the order of the power series `X` is 1. We then apply the definition of division by `X^n`, which shifts the coefficients of the power series. Dividing `X` by `X^1` yields a new power series whose constant term is 1 and all other coefficients are zero, which is precisely the power series `1`."}
{"statement_idx": 8, "proof_idea": "We prove this by showing the coefficients of the power series on each side are equal. After applying the identity `order (f * g) = order f + order g` and expanding the definitions of division and multiplication, the equality follows from a change of variables in the summation of the Cauchy product."}
{"statement_idx": 9, "proof_idea": "By definition, the length of `p.bypass` is always less than or equal to the length of `p`. The given hypothesis thus implies their lengths are equal, which only occurs if the walk `p` has no repeated vertices, and in that case, `bypass` returns the walk itself."}
{"statement_idx": 10, "proof_idea": "We prove this by contradiction. If the walk `p` is not a path, it must repeat a vertex, allowing us to construct a new, shorter walk from `u` to `v` by removing the enclosed cycle. This new walk's length would be strictly less than `G.dist u v`, which contradicts the hypothesis that `p` has the minimal possible length."}
{"statement_idx": 11, "proof_idea": "We proceed by contradiction using a walk `p` from `u` to `v` of minimal length, which is by definition `G.dist u v`. If `p` were not a path, it would contain a cycle, which could be removed to construct a new, strictly shorter walk from `u` to `v`. This contradicts the fact that `p` has minimal length, so `p` must be a path."}
{"statement_idx": 12, "proof_idea": "Since the graph is connected, there exists a walk from `u` to `v`. We can choose a walk `p` of minimal length, which by definition is equal to the distance `G.dist u v`. This minimal walk must be a path, because if it revisited a vertex, we could remove the resulting cycle to find an even shorter walk, which contradicts the minimality of `p`."}
{"statement_idx": 13, "proof_idea": "Using the fact that `p` and `q` are complementary, we establish a homeomorphism between `E` and the product `p \u00d7 q`. This homeomorphism maps the set `q\u1d9c` to `({0}\u1d9c : Set p) \u00d7 q`, which is path-connected as it is a product of two path-connected spaces. Therefore, `q\u1d9c` is path-connected as it is homeomorphic to a path-connected set."}
{"statement_idx": 14, "proof_idea": "To connect two points `x` and `y` in the complement of `E`, we consider their non-zero projections in the quotient space `F \u29f8 E`. Since the codimension is greater than one, the set of non-zero vectors in this quotient space is path-connected, allowing us to find a path between the projections that avoids the origin. This path can then be lifted back to a path in `F` from `x` to `y` that lies entirely within the complement of `E`."}
{"statement_idx": 15, "proof_idea": "To prove the complement of `E` is connected, we show it is path-connected. For any two points `x` and `y` in the complement, the condition that the codimension is greater than one allows us to find a third point `z` such that the plane containing `x`, `y`, and `z` is not a subset of any hyperplane parallel to `E`. This ensures we can construct a path from `x` to `z` and then from `z` to `y` that avoids `E` entirely."}
{"statement_idx": 16, "proof_idea": "The complement of `E` is path-connected, which implies the result. To show path-connectedness, for any two points `y, z` in the complement, we find an intermediate point `w` such that the line segments `[y, w]` and `[w, z]` lie in the complement. Such a `w` exists because the codimension of `E` is greater than one, allowing us to construct a path in the quotient space `F/E` that avoids the origin."}
{"statement_idx": 17, "proof_idea": "To show that the measurable sets separate points, consider two distinct points `x` and `y`. Since the space is T\u2080, there exists an open set `U` containing one point but not the other. This open set `U` is measurable by definition of the Borel sigma-algebra, thus providing the required separating set."}
{"statement_idx": 18, "proof_idea": "Let `G` be a countable collection of sets that generates the sigma-algebra and separates points. We define a topology `\u03c4` as the initial topology induced by the characteristic functions of the sets in `G`, which embeds our space into the Cantor space `{0, 1}\u207f`. This topology is second-countable and T4 because the Cantor space is metrizable, and its Borel sigma-algebra coincides with the original one as they are both generated by `G`."}
{"statement_idx": 19, "proof_idea": "Let `S` be the countable family of measurable sets that separates points. We define a topology `\u03c4` using `S` as a subbasis, which is second-countable because `S` is countable. This construction ensures the Borel \u03c3-algebra of `\u03c4` is the original measurable space `m`, and the separating property of `S` makes the topology Hausdorff and regular, which for a second-countable"}
{"statement_idx": 20, "proof_idea": "The proof is by function extensionality. For any input `i`, the left-hand side simplifies to `e (Fin.succ i)` by the definition of `Equiv.embeddingFinSucc` and the coercion from a subtype, which is precisely the definition of the right-hand side."}
{"statement_idx": 21, "proof_idea": "The proof follows by definition of `Equiv.embeddingFinSucc`. This equivalence maps an embedding `e` to a pair whose second component is explicitly `e 0`, so the equality holds by reflexivity."}
{"statement_idx": 22, "proof_idea": "To prove the equality of these two functions, we apply function extensionality. We then perform a case analysis on the input `x : Fin (n + 1)`; both the base case `x = 0` and the successor case `x = Fin.succ i` follow directly by the definitions of `Equiv.embeddingFinSucc.symm` and `Fin.cons`."}
{"statement_idx": 23, "proof_idea": "The forward direction follows by substituting `g` for `f`. For the backward direction, prove `f = g` by function extensionality: for any `x`, if `x` is in the support, `f x = g x` by hypothesis, and if `x` is not in the support, then both `f x` and `g x` are `1`."}
{"statement_idx": 24, "proof_idea": "To prove the set equality, we show inclusion in both directions by considering an arbitrary element `a`. We proceed by a case analysis on whether `a = x` or `a \u2260 x`, simplifying the definitions of `mulSupport` and `update` in each case and using the hypothesis that `y` is not one."}
{"statement_idx": 25, "proof_idea": "To prove the set equality, we show that an element `y` belongs to both sets under the same conditions. By performing a case split on whether `y = x`, we find that `(update f x 1) y \u2260 1` holds if and only if `y \u2260 x` and `f y \u2260 1`, which is precisely the definition of an element belonging to `mulSupport f \\ {x}`."}
{"statement_idx": 26, "proof_idea": "The proof proceeds by splitting on the condition `y = 1`. In each case, we prove the set equality by extensionality, considering an arbitrary element `a`. A further case split on whether `a = x` allows us to simplify the definition of `update f x y` and show that the conditions for membership on both sides of the equality are equivalent."}
{"statement_idx": 27, "proof_idea": "Since being \u00e9tale is defined as being both flat and unramified, we prove the goal by showing that these two properties are preserved under an `R`-algebra isomorphism. The given equivalence `e` allows us to transfer the flat module structure and the unramified property from `A` to `B`."}
{"statement_idx": 28, "proof_idea": "An algebra is \u00e9tale if it is both smooth and unramified. Since the composition of smooth algebras is smooth and the composition of unramified algebras is unramified, we can conclude that `B` is an \u00e9tale `R`-algebra."}
{"statement_idx": 29, "proof_idea": "To prove that the localization `A` is an \u00e9tale `R`-algebra, we show it is both flat and unramified. Flatness is a standard property of any localization. To prove it is unramified, we show that the module of K\u00e4hler differentials `\u03a9_{A/R}` is trivial, which is a known property for localizations at a single element."}
{"statement_idx": 30, "proof_idea": "The property of being unramified is defined by the vanishing of the module of K\u00e4hler differentials, `\u03a9[A/R] = 0`. The given R-algebra isomorphism `e` induces a linear equivalence between `\u03a9[A/R]` and `\u03a9[B/R]`. Therefore, since `\u03a9[A/R]` is the zero module, `\u03a9[B/R]` must also be zero, which proves that B is unramified over R."}
{"statement_idx": 31, "proof_idea": "To prove the ring map is unramified, we first show it is of finite type, as `A` is generated by the single element `1/r` as an `R`-algebra. Then, we prove the module of K\u00e4hler differentials is zero by applying the Leibniz rule to `r * (1/r) = 1`, which implies `d(1/r) = 0` because `r` is a unit in `A`."}
{"statement_idx": 32, "proof_idea": "We use the first fundamental exact sequence of K\u00e4hler differentials for the composition of ring maps `R \u2192 A \u2192 B`. The hypotheses that `R \u2192 A` and `A \u2192 B` are unramified mean that `\u03a9_{A/R} = 0` and `\u03a9_{B/A} = 0`, which forces the middle term of the sequence, `\u03a9_{B/R}`, to also be zero. This shows that the composite map `R \u2192 B` is unramified."}
{"statement_idx": 33, "proof_idea": "The proof recognizes that `op c.X`, `op c'.X`, and `f.X` are all limit objects for the same diagram in the opposite category. The left-hand side is the composition of canonical isomorphisms between these limit objects, which simplifies to the direct canonical isomorphism from `op c.X` to `op c'.X`. This resulting isomorphism is precisely the opposite of the canonical isomorphism between the colimit objects `c'.X` and `c.X`, which defines the right-hand side."}
{"statement_idx": 34, "proof_idea": "To prove the equality of these two morphisms, which both start from the colimit object `op (limit f)`, we can use the universal property of colimits. It suffices to show that pre-composing both sides with the cocone maps `op (f.\u03c0.app j)` results in the same morphism for all `j`. The result then follows by simplifying both sides using the definitions of the isomorphisms and the universal properties of the given limits and colimits."}
{"statement_idx": 35, "proof_idea": "To prove the fundamental parallelepiped is a fundamental domain, we first show it tiles the space by demonstrating that any vector `x` can be uniquely decomposed into a sum of a lattice point `l` and a vector `f` in the fundamental domain. This is achieved by taking the integer and fractional parts of the coordinates of `x` with respect to the basis `b`. The disjointness of translates (up to a null set) then follows because any overlap must occur on the boundary of the parallelepiped, which has measure zero."}
{"statement_idx": 36, "proof_idea": "By the definition of a Z-lattice, there exists a basis `b` for the finite-dimensional space `E` such that `L` is the integer span of `b`. This provides a bijection between `L` and the space of functions from the finite index type of the basis to the integers, `\u03b9 \u2192 \u2124`. Since `\u03b9` is finite and `\u2124` is countable, the function space `\u03b9 \u2192 \u2124` is countable, and therefore `L` is also countable."}
{"statement_idx": 37, "proof_idea": "The proof proceeds by definition. First, unfold the definition of `covolume` as the measure of the quotient space `E \u29f8 L`. Then, apply the main property of the fundamental domain `h`, which directly states that the measure of this quotient space is equal to the measure of the set `F`."}
{"statement_idx": 38, "proof_idea": "The covolume is defined as the measure of the fundamental domain of the lattice. Since the fundamental domain has a non-empty interior and the Haar measure is strictly positive on non-empty open sets, the covolume must be positive and therefore non-zero."}
{"statement_idx": 39, "proof_idea": "The covolume is defined as the measure of the fundamental domain of the lattice `L`. Since the lattice is discrete and of full rank, its fundamental domain is a non-degenerate set with a non-empty interior, which implies it has a positive measure."}
{"statement_idx": 40, "proof_idea": "First, express the covolume as the measure of the fundamental domain of the lattice basis `b`. The result then follows from the change of variables formula for measures, applied to the linear map that sends the real basis `b\u2080` to the lattice basis `b`."}
{"statement_idx": 41, "proof_idea": "The covolume is the volume of the fundamental domain of the lattice. The fundamental domain can be expressed as the image of the unit hypercube under the linear map defined by the basis `b`. By the change of variables formula, the volume of this image is the volume of the unit cube (which is 1) multiplied by the absolute value of the determinant of the matrix associated with the basis `b`."}
{"statement_idx": 42, "proof_idea": "The proof proceeds by unfolding the definition of the underlying equivalence relation between `z\u2081` and `z\u2082`. This relation provides witnesses `u` and `v` from the submonoid satisfying `u * z\u2081.fst = v * z\u2082.fst`, which is precisely the definition of `LeftFractionRel z\u2081.fst z\u2082.fst`."}
{"statement_idx": 43, "proof_idea": "Begin by unfolding the definition of the equivalence relation on `z\u2081` and `z\u2082` from the hypothesis. This equivalence provides the existence of two elements that satisfy a specific property for the second components of `z\u2081` and `z\u2082`. This property is exactly the definition of `LeftFractionRel z\u2081.snd z\u2082.snd`, which completes the proof."}
{"statement_idx": 44, "proof_idea": "The equivalence follows from the universal property of localization: the left-to-right direction holds because if two fractions have equal components after localization, then by the universal property they must be equivalent in the original category; the right-to-left direction follows because the localization functor respects the fraction equivalence relation, so equivalent fractions map to equal morphisms in the localized category."}
{"statement_idx": 45, "proof_idea": "Use the left calculus of fractions property to find a common denominator: since W has left calculus of fractions, there exists a morphism that can be composed with both \u03c6.s to create equivalent fractions, and this same construction works simultaneously for both pairs (\u03c6.f, \u03c6.s) and (\u03c6.f', \u03c6.s) to produce the desired \u03c8 with the required commutativity conditions."}
{"statement_idx": 46, "proof_idea": "First, express the morphisms `f` and `f'` individually as left fractions, which is possible by the construction of the localization. Then, use the Ore condition to find a common denominator for these two fractions, which directly yields the desired `LeftFraction\u2082`."}
{"statement_idx": 47, "proof_idea": "First, express each of the three morphisms `f`, `f'`, and `f''` as individual left fractions using the fact that the functor `L` is a localization. Then, iteratively apply the Ore condition to find a common denominator for these three fractions, adjusting the numerators accordingly. This process yields the required `W.LeftFraction\u2083` structure."}
{"statement_idx": 48, "proof_idea": "The proof proceeds by unfolding the definitions on both sides of the equation. The left-hand side simplifies using the fact that `eval` is a homomorphism, while the right-hand side is by definition the dot product; both expressions reduce to the sum `\u2211 j, M i j * c j`."}
{"statement_idx": 49, "proof_idea": "The proof proceeds by expanding the definition of `toMvPolynomial` on both sides, which expresses them as sums over the columns `j`. Since `MvPolynomial.map f` is a ring homomorphism, it distributes over the sum on the right-hand side. The equality then follows term-by-term from the definitions of `Matrix.map` and `MvPolynomial.map_C`."}
